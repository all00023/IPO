/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import core.Producto;
import core.Ticket;
import core.Ticket_Producto;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 * @author JOSE
 */
public class PPal extends javax.swing.JFrame {

    private ArrayList<Producto> listaStock = new ArrayList<>();
//    private ArrayList<Ticket_Producto> listaVender = new ArrayList<>();
    private ArrayList<String> preciosUnitarios = new ArrayList<>();
    private Ticket ticketActual = null;
    private Image imagenArticulo;
    private Image imagenEliminar;
    private int xArticulo, yArticulo;

    /**
     * Creates new form PPal
     */
    public PPal() throws AWTException {

        setExtendedState(JFrame.MAXIMIZED_BOTH);
        centrarVentana();

        initComponents();

        deshabilitarcapas(PanelVender);

    }

    private void centrarVentana() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        int x = (int) tk.getScreenSize().getWidth();
        int y = (int) tk.getScreenSize().getHeight();
        setLocation((x) / 2, ((y) / 2));
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Iconos/16px/cigarette.png"));


        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Bar_Herramientas = new javax.swing.JToolBar();
        cmd_vender = new javax.swing.JButton();
        cmd_Stock = new javax.swing.JButton();
        cmd_Tickets = new javax.swing.JButton();
        cmd_Articulos = new javax.swing.JButton();
        cmd_configure = new javax.swing.JButton();
        cmd_about = new javax.swing.JButton();
        Panel_Capas = new javax.swing.JLayeredPane();
        PanelVender = new javax.swing.JPanel();
        txt_insertar = new javax.swing.JTextField();
        cmd_insertar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Vender = new javax.swing.JTable();
        cmd_eliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cmd_7 = new javax.swing.JButton();
        cmd_8 = new javax.swing.JButton();
        cmd_4 = new javax.swing.JButton();
        cmd_6 = new javax.swing.JButton();
        cmd_9 = new javax.swing.JButton();
        cmd_1 = new javax.swing.JButton();
        cmd_5 = new javax.swing.JButton();
        cmd_2 = new javax.swing.JButton();
        cmd_3 = new javax.swing.JButton();
        cmd_0 = new javax.swing.JButton();
        cmd_mas = new javax.swing.JButton();
        cmd_menos = new javax.swing.JButton();
        cmd_punto = new javax.swing.JButton();
        cmd_CE = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lb_total = new javax.swing.JLabel();
        cmd_finalizar = new javax.swing.JButton();
        cmd_eliminarTodo = new javax.swing.JButton();
        PanelStock = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla_Stock = new javax.swing.JTable();
        cmd_Todo = new javax.swing.JButton();
        cmd_Bajo = new javax.swing.JButton();
        txt_Busqueda = new javax.swing.JTextField();
        cmd_Buscar = new javax.swing.JButton();
        cmd_Aplicar = new javax.swing.JButton();
        PanelTickets = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tabla_Tickets = new javax.swing.JTable();
        cmd_TodoTickets = new javax.swing.JButton();
        txt_Desde = new javax.swing.JLabel();
        txt_Hasta = new javax.swing.JLabel();
        cmd_AplicarFechas = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaTickets = new javax.swing.JTextArea();
        cmd_abrirTicket = new javax.swing.JButton();
        cmd_imprimirTicket = new javax.swing.JButton();
        fechaDesde = new com.toedter.calendar.JDateChooser();
        fechaHasta = new com.toedter.calendar.JDateChooser();
        PanelArticulos = new javax.swing.JPanel();
        PanelArticulosAÃ±adirEditar = new javax.swing.JPanel();
        cmd_insertarArticulo = new javax.swing.JButton();
        txt_insertarArticulo = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        canvasAgregar = new java.awt.Canvas();
        lb_codBarrasArticulo = new javax.swing.JLabel();
        txt_codBarrasArticulo = new javax.swing.JTextField();
        lb_nombreArticulo = new javax.swing.JLabel();
        txt_nombreArticulo = new javax.swing.JTextField();
        lb_precioArticulo = new javax.swing.JLabel();
        txt_precioArticulo = new javax.swing.JTextField();
        lb_formatoArticulo = new javax.swing.JLabel();
        txt_formatoArticulo = new javax.swing.JTextField();
        lb_stockArticulo = new javax.swing.JLabel();
        txt_stockArticulo = new javax.swing.JTextField();
        lb_stockMinimoArticulo = new javax.swing.JLabel();
        txt_stockMinimoArticulo = new javax.swing.JTextField();
        txt_imagen = new javax.swing.JTextField();
        lb_imagen = new javax.swing.JLabel();
        cmd_explorar = new javax.swing.JButton();
        cmd_insertar2 = new javax.swing.JButton();
        txt_agregarEditar = new javax.swing.JLabel();
        PanelArticulosEliminar = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        PanelConfiguracion = new javax.swing.JPanel();
        lb_nombre = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        lb_cif = new javax.swing.JLabel();
        txt_cif = new javax.swing.JTextField();
        lb_direccion = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        lb_ciudad = new javax.swing.JLabel();
        txt_ciudad = new javax.swing.JTextField();
        lb_cp = new javax.swing.JLabel();
        txt_cp = new javax.swing.JTextField();
        lb_provincia = new javax.swing.JLabel();
        txt_provincia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmd_CargarConf = new javax.swing.JButton();
        cmd_GuardarConf = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        PanelAcercaDe = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        PanelPrincipal = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TPV ALIBEL");
        setBackground(new java.awt.Color(185, 221, 239));
        setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setName("Ppal"); // NOI18N
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        Bar_Herramientas.setBackground(new java.awt.Color(185, 221, 239));
        Bar_Herramientas.setFloatable(false);

        cmd_vender.setBackground(new java.awt.Color(224, 251, 251));
        cmd_vender.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cmd_vender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/Shopping.png"))); // NOI18N
        cmd_vender.setText("Vender");
        cmd_vender.setToolTipText("Panel de venta");
        cmd_vender.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_vender.setFocusable(false);
        cmd_vender.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmd_vender.setMaximumSize(new java.awt.Dimension(100, 100));
        cmd_vender.setMinimumSize(new java.awt.Dimension(100, 100));
        cmd_vender.setPreferredSize(new java.awt.Dimension(100, 100));
        cmd_vender.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmd_vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_venderActionPerformed(evt);
            }
        });
        Bar_Herramientas.add(cmd_vender);

        cmd_Stock.setBackground(new java.awt.Color(224, 251, 251));
        cmd_Stock.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cmd_Stock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/package.png"))); // NOI18N
        cmd_Stock.setText("Control Stock");
        cmd_Stock.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_Stock.setFocusable(false);
        cmd_Stock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmd_Stock.setMaximumSize(new java.awt.Dimension(100, 100));
        cmd_Stock.setMinimumSize(new java.awt.Dimension(100, 100));
        cmd_Stock.setPreferredSize(new java.awt.Dimension(100, 100));
        cmd_Stock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmd_Stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_StockActionPerformed(evt);
            }
        });
        Bar_Herramientas.add(cmd_Stock);

        cmd_Tickets.setBackground(new java.awt.Color(224, 251, 251));
        cmd_Tickets.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cmd_Tickets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/ticket.png"))); // NOI18N
        cmd_Tickets.setText("Control Tickets");
        cmd_Tickets.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_Tickets.setFocusable(false);
        cmd_Tickets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmd_Tickets.setMaximumSize(new java.awt.Dimension(100, 100));
        cmd_Tickets.setMinimumSize(new java.awt.Dimension(100, 100));
        cmd_Tickets.setPreferredSize(new java.awt.Dimension(100, 100));
        cmd_Tickets.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmd_Tickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_TicketsActionPerformed(evt);
            }
        });
        Bar_Herramientas.add(cmd_Tickets);

        cmd_Articulos.setBackground(new java.awt.Color(224, 251, 251));
        cmd_Articulos.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cmd_Articulos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/Information.png"))); // NOI18N
        cmd_Articulos.setText("ArtÃ­culos");
        cmd_Articulos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_Articulos.setFocusable(false);
        cmd_Articulos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmd_Articulos.setMaximumSize(new java.awt.Dimension(100, 100));
        cmd_Articulos.setMinimumSize(new java.awt.Dimension(100, 100));
        cmd_Articulos.setPreferredSize(new java.awt.Dimension(100, 100));
        cmd_Articulos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmd_Articulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_ArticulosActionPerformed(evt);
            }
        });
        Bar_Herramientas.add(cmd_Articulos);

        cmd_configure.setBackground(new java.awt.Color(224, 251, 251));
        cmd_configure.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cmd_configure.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/configure.png"))); // NOI18N
        cmd_configure.setText("ConfiguraciÃ³n");
        cmd_configure.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_configure.setFocusable(false);
        cmd_configure.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmd_configure.setMaximumSize(new java.awt.Dimension(100, 100));
        cmd_configure.setMinimumSize(new java.awt.Dimension(100, 100));
        cmd_configure.setPreferredSize(new java.awt.Dimension(100, 100));
        cmd_configure.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmd_configure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_configureActionPerformed(evt);
            }
        });
        Bar_Herramientas.add(cmd_configure);

        cmd_about.setBackground(new java.awt.Color(224, 251, 251));
        cmd_about.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cmd_about.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/Information.png"))); // NOI18N
        cmd_about.setText("Acerca de");
        cmd_about.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_about.setFocusable(false);
        cmd_about.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmd_about.setMaximumSize(new java.awt.Dimension(100, 100));
        cmd_about.setMinimumSize(new java.awt.Dimension(100, 100));
        cmd_about.setPreferredSize(new java.awt.Dimension(100, 100));
        cmd_about.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmd_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_aboutActionPerformed(evt);
            }
        });
        Bar_Herramientas.add(cmd_about);

        Panel_Capas.setBackground(new java.awt.Color(185, 221, 239));

        PanelVender.setBackground(new java.awt.Color(185, 221, 239));

        txt_insertar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_insertar.setForeground(new java.awt.Color(102, 102, 102));
        txt_insertar.setText("Inserte CÃ³digo de Barras");
        txt_insertar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_insertar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_insertarFocusGained(evt);
            }
        });
        txt_insertar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_insertarKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_insertarKeyPressed(evt);
            }
        });

        cmd_insertar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmd_insertar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/add.png"))); // NOI18N
        cmd_insertar.setText("Inserta ArtÃ­culo");
        cmd_insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_insertarActionPerformed(evt);
            }
        });

        Tabla_Vender.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Tabla_Vender.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod_Barras", "Articulo", "unidades", "precio x1", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_Vender.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Tabla_VenderFocusLost(evt);
            }
        });
        Tabla_Vender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Tabla_VenderKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla_Vender);

        cmd_eliminar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmd_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/delete.png"))); // NOI18N
        cmd_eliminar.setText("Eliminar ArtÃ­culo");
        cmd_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_eliminarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cmd_7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_7.setText("7");
        cmd_7.setFocusable(false);
        cmd_7.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_7.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_7.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_7ActionPerformed(evt);
            }
        });

        cmd_8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_8.setText("8");
        cmd_8.setFocusable(false);
        cmd_8.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_8.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_8.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_8ActionPerformed(evt);
            }
        });

        cmd_4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_4.setText("4");
        cmd_4.setFocusable(false);
        cmd_4.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_4.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_4.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_4ActionPerformed(evt);
            }
        });

        cmd_6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_6.setText("6");
        cmd_6.setFocusable(false);
        cmd_6.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_6.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_6.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_6ActionPerformed(evt);
            }
        });

        cmd_9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_9.setText("9");
        cmd_9.setFocusable(false);
        cmd_9.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_9.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_9.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_9ActionPerformed(evt);
            }
        });

        cmd_1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_1.setText("1");
        cmd_1.setFocusable(false);
        cmd_1.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_1.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_1.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_1ActionPerformed(evt);
            }
        });

        cmd_5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_5.setText("5");
        cmd_5.setFocusable(false);
        cmd_5.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_5.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_5.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_5ActionPerformed(evt);
            }
        });

        cmd_2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_2.setText("2");
        cmd_2.setFocusable(false);
        cmd_2.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_2.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_2.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_2ActionPerformed(evt);
            }
        });

        cmd_3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_3.setText("3");
        cmd_3.setFocusable(false);
        cmd_3.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_3.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_3.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_3ActionPerformed(evt);
            }
        });

        cmd_0.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_0.setText("0");
        cmd_0.setFocusable(false);
        cmd_0.setMaximumSize(new java.awt.Dimension(50, 50));
        cmd_0.setMinimumSize(new java.awt.Dimension(50, 50));
        cmd_0.setPreferredSize(new java.awt.Dimension(50, 50));
        cmd_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_0ActionPerformed(evt);
            }
        });

        cmd_mas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_mas.setText("+");
        cmd_mas.setFocusable(false);
        cmd_mas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_masActionPerformed(evt);
            }
        });

        cmd_menos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_menos.setText("-");
        cmd_menos.setFocusable(false);
        cmd_menos.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_menos.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_menos.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_menos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_menosActionPerformed(evt);
            }
        });

        cmd_punto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_punto.setText(".");
        cmd_punto.setFocusable(false);
        cmd_punto.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_punto.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_punto.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_punto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_puntoActionPerformed(evt);
            }
        });

        cmd_CE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_CE.setText("CE");
        cmd_CE.setFocusable(false);
        cmd_CE.setMaximumSize(new java.awt.Dimension(60, 60));
        cmd_CE.setMinimumSize(new java.awt.Dimension(60, 60));
        cmd_CE.setPreferredSize(new java.awt.Dimension(60, 60));
        cmd_CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_CEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmd_0, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_punto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmd_1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmd_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmd_7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmd_8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmd_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmd_CE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_mas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_menos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmd_7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmd_8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmd_9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cmd_CE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmd_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmd_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmd_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmd_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cmd_mas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmd_punto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_menos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("TOTAL");

        lb_total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmd_finalizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmd_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/shoppingbasket.png"))); // NOI18N
        cmd_finalizar.setText("Finalizar Compra");
        cmd_finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_finalizarActionPerformed(evt);
            }
        });

        cmd_eliminarTodo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_eliminarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/erase.png"))); // NOI18N
        cmd_eliminarTodo.setText("Borrar Compra");
        cmd_eliminarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_eliminarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelVenderLayout = new javax.swing.GroupLayout(PanelVender);
        PanelVender.setLayout(PanelVenderLayout);
        PanelVenderLayout.setHorizontalGroup(
            PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelVenderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelVenderLayout.createSequentialGroup()
                        .addComponent(txt_insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmd_insertar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(cmd_eliminar))
                    .addComponent(jScrollPane1))
                .addGap(32, 32, 32)
                .addGroup(PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelVenderLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelVenderLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelVenderLayout.createSequentialGroup()
                        .addComponent(cmd_eliminarTodo)
                        .addContainerGap())
                    .addGroup(PanelVenderLayout.createSequentialGroup()
                        .addComponent(cmd_finalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        PanelVenderLayout.setVerticalGroup(
            PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVenderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_insertar)
                    .addComponent(cmd_insertar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmd_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmd_eliminarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelVenderLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(PanelVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmd_finalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        PanelVender.setBounds(0, 0, 990, 630);
        Panel_Capas.add(PanelVender, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PanelStock.setBackground(new java.awt.Color(185, 221, 239));

        Tabla_Stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo de Barras", "Nombre", "Stock MÃ­nimo", "Stock Actual"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_Stock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Tabla_StockFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(Tabla_Stock);

        cmd_Todo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_Todo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/eye.png"))); // NOI18N
        cmd_Todo.setText("Mostrar Todo");
        cmd_Todo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_TodoActionPerformed(evt);
            }
        });

        cmd_Bajo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_Bajo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/warning.png"))); // NOI18N
        cmd_Bajo.setText("Mostrar Stock Bajo");
        cmd_Bajo.setMaximumSize(new java.awt.Dimension(123, 35));
        cmd_Bajo.setMinimumSize(new java.awt.Dimension(123, 35));
        cmd_Bajo.setPreferredSize(new java.awt.Dimension(123, 35));
        cmd_Bajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_BajoActionPerformed(evt);
            }
        });

        txt_Busqueda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_Busqueda.setForeground(new java.awt.Color(153, 153, 153));
        txt_Busqueda.setText("BÃºsqueda");
        txt_Busqueda.setPreferredSize(new java.awt.Dimension(75, 35));
        txt_Busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_BusquedaActionPerformed(evt);
            }
        });
        txt_Busqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_BusquedaFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_BusquedaFocusGained(evt);
            }
        });
        txt_Busqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_BusquedaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_BusquedaKeyTyped(evt);
            }
        });

        cmd_Buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/16px/search.png"))); // NOI18N
        cmd_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_BuscarActionPerformed(evt);
            }
        });

        cmd_Aplicar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_Aplicar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/OK.png"))); // NOI18N
        cmd_Aplicar.setText("Aplicar Cambios");
        cmd_Aplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_AplicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelStockLayout = new javax.swing.GroupLayout(PanelStock);
        PanelStock.setLayout(PanelStockLayout);
        PanelStockLayout.setHorizontalGroup(
            PanelStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelStockLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(PanelStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelStockLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmd_Aplicar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelStockLayout.createSequentialGroup()
                        .addComponent(cmd_Todo, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmd_Bajo, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_Busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(cmd_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        PanelStockLayout.setVerticalGroup(
            PanelStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmd_Todo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmd_Bajo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_Busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmd_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cmd_Aplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PanelStock.setBounds(0, 0, 770, 450);
        Panel_Capas.add(PanelStock, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PanelTickets.setBackground(new java.awt.Color(185, 221, 239));
        PanelTickets.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Tabla_Tickets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Fecha", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_Tickets.setMinimumSize(new java.awt.Dimension(45, 600));
        Tabla_Tickets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_TicketsMouseClicked(evt);
            }
        });
        Tabla_Tickets.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Tabla_TicketsKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(Tabla_Tickets);
        Tabla_Tickets.getColumnModel().getColumn(0).setResizable(false);
        Tabla_Tickets.getColumnModel().getColumn(0).setPreferredWidth(100);
        Tabla_Tickets.getColumnModel().getColumn(1).setResizable(false);
        Tabla_Tickets.getColumnModel().getColumn(1).setPreferredWidth(80);
        Tabla_Tickets.getColumnModel().getColumn(2).setResizable(false);
        Tabla_Tickets.getColumnModel().getColumn(2).setPreferredWidth(50);

        cmd_TodoTickets.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_TodoTickets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/eye.png"))); // NOI18N
        cmd_TodoTickets.setText("Mostrar Todo");
        cmd_TodoTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_TodoTicketsActionPerformed(evt);
            }
        });

        txt_Desde.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_Desde.setText("Mostrar desde");

        txt_Hasta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_Hasta.setText("hasta");

        cmd_AplicarFechas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_AplicarFechas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/OK.png"))); // NOI18N
        cmd_AplicarFechas.setText("Mostrar");
        cmd_AplicarFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_AplicarFechasActionPerformed(evt);
            }
        });

        areaTickets.setEditable(false);
        areaTickets.setColumns(20);
        areaTickets.setRows(5);
        jScrollPane3.setViewportView(areaTickets);

        cmd_abrirTicket.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_abrirTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/open.png"))); // NOI18N
        cmd_abrirTicket.setText("Abrir Archivo");
        cmd_abrirTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_abrirTicketActionPerformed(evt);
            }
        });

        cmd_imprimirTicket.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_imprimirTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/printer.png"))); // NOI18N
        cmd_imprimirTicket.setText("Imprimir");
        cmd_imprimirTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_imprimirTicketActionPerformed(evt);
            }
        });

        fechaDesde.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        fechaHasta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout PanelTicketsLayout = new javax.swing.GroupLayout(PanelTickets);
        PanelTickets.setLayout(PanelTicketsLayout);
        PanelTicketsLayout.setHorizontalGroup(
            PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTicketsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_TodoTickets))
                .addGap(50, 50, 50)
                .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTicketsLayout.createSequentialGroup()
                        .addComponent(txt_Desde)
                        .addGap(18, 18, 18)
                        .addComponent(fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_Hasta)
                        .addGap(18, 18, 18)
                        .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmd_AplicarFechas)
                        .addContainerGap(133, Short.MAX_VALUE))
                    .addGroup(PanelTicketsLayout.createSequentialGroup()
                        .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelTicketsLayout.createSequentialGroup()
                                .addComponent(cmd_abrirTicket)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmd_imprimirTicket))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(25, 25, 25))))
        );
        PanelTicketsLayout.setVerticalGroup(
            PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTicketsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTicketsLayout.createSequentialGroup()
                        .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelTicketsLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_Desde)
                                        .addComponent(fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_Hasta)
                                    .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTicketsLayout.createSequentialGroup()
                                .addComponent(cmd_AplicarFechas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addComponent(jScrollPane3))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelTicketsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_TodoTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_abrirTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_imprimirTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        PanelTickets.setBounds(0, 0, 990, 630);
        Panel_Capas.add(PanelTickets, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PanelArticulos.setBackground(new java.awt.Color(185, 221, 239));

        PanelArticulosAÃ±adirEditar.setBackground(new java.awt.Color(185, 221, 239));

        cmd_insertarArticulo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmd_insertarArticulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/eye.png"))); // NOI18N
        cmd_insertarArticulo.setText("Cargar ArtÃ­culo");
        cmd_insertarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_insertarArticuloActionPerformed(evt);
            }
        });

        txt_insertarArticulo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_insertarArticulo.setForeground(new java.awt.Color(102, 102, 102));
        txt_insertarArticulo.setText("Inserte CÃ³digo de Barras");
        txt_insertarArticulo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_insertarArticulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_insertarArticuloFocusGained(evt);
            }
        });
        txt_insertarArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_insertarArticuloKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_insertarArticuloKeyPressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        canvasAgregar.setBackground(new java.awt.Color(255, 255, 255));
        canvasAgregar.setMaximumSize(new java.awt.Dimension(250, 250));
        canvasAgregar.setMinimumSize(new java.awt.Dimension(250, 250));
        canvasAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvasAgregarMouseClicked(evt);
            }
        });
        canvasAgregar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                canvasAgregarFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(canvasAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(canvasAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addContainerGap())
        );

        lb_codBarrasArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_codBarrasArticulo.setText("Codigo de Barras");

        txt_codBarrasArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lb_nombreArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_nombreArticulo.setText("Nombre");

        txt_nombreArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_nombreArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreArticuloActionPerformed(evt);
            }
        });

        lb_precioArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_precioArticulo.setText("Precio");

        txt_precioArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_precioArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioArticuloActionPerformed(evt);
            }
        });

        lb_formatoArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_formatoArticulo.setText("Formato");

        txt_formatoArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lb_stockArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_stockArticulo.setText("Stock");

        txt_stockArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lb_stockMinimoArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_stockMinimoArticulo.setText("Stock MÃ­nimo");

        txt_stockMinimoArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_stockMinimoArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_stockMinimoArticuloActionPerformed(evt);
            }
        });

        txt_imagen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_imagen.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_imagen.setEnabled(false);

        lb_imagen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_imagen.setText("Imagen");

        cmd_explorar.setText("...");
        cmd_explorar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_explorarActionPerformed(evt);
            }
        });

        cmd_insertar2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmd_insertar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/OK.png"))); // NOI18N
        cmd_insertar2.setText("Guardar ArtÃ­culo");
        cmd_insertar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_insertar2ActionPerformed(evt);
            }
        });

        txt_agregarEditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_agregarEditar.setText("Agregar / Editar ArtÃ­culos");

        javax.swing.GroupLayout PanelArticulosAÃ±adirEditarLayout = new javax.swing.GroupLayout(PanelArticulosAÃ±adirEditar);
        PanelArticulosAÃ±adirEditar.setLayout(PanelArticulosAÃ±adirEditarLayout);
        PanelArticulosAÃ±adirEditarLayout.setHorizontalGroup(
            PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lb_stockArticulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_formatoArticulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_precioArticulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_nombreArticulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_codBarrasArticulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_stockMinimoArticulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lb_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                                .addComponent(txt_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_explorar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_stockArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_stockMinimoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txt_nombreArticulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_precioArticulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_codBarrasArticulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_formatoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addComponent(txt_insertarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmd_insertarArticulo))
                    .addGroup(PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                        .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(cmd_insertar2))
                            .addGroup(PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(txt_agregarEditar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelArticulosAÃ±adirEditarLayout.setVerticalGroup(
            PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelArticulosAÃ±adirEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_agregarEditar)
                .addGap(18, 18, 18)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_insertarArticulo)
                    .addComponent(cmd_insertarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_codBarrasArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_codBarrasArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_nombreArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_precioArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_precioArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_formatoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_formatoArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_stockArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_stockArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_stockMinimoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_stockMinimoArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmd_explorar)
                    .addGroup(PanelArticulosAÃ±adirEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lb_imagen)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd_insertar2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelArticulosEliminar.setBackground(new java.awt.Color(185, 221, 239));

        javax.swing.GroupLayout PanelArticulosEliminarLayout = new javax.swing.GroupLayout(PanelArticulosEliminar);
        PanelArticulosEliminar.setLayout(PanelArticulosEliminarLayout);
        PanelArticulosEliminarLayout.setHorizontalGroup(
            PanelArticulosEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        PanelArticulosEliminarLayout.setVerticalGroup(
            PanelArticulosEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout PanelArticulosLayout = new javax.swing.GroupLayout(PanelArticulos);
        PanelArticulos.setLayout(PanelArticulosLayout);
        PanelArticulosLayout.setHorizontalGroup(
            PanelArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelArticulosLayout.createSequentialGroup()
                .addComponent(PanelArticulosAÃ±adirEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelArticulosEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(556, 556, 556))
        );
        PanelArticulosLayout.setVerticalGroup(
            PanelArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelArticulosAÃ±adirEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelArticulosEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
        );

        PanelArticulos.setBounds(0, 0, 990, 630);
        Panel_Capas.add(PanelArticulos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PanelConfiguracion.setBackground(new java.awt.Color(185, 221, 239));

        lb_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_nombre.setText("Nombre de la CompaÃ±ia*");

        txt_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lb_cif.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_cif.setText("CIF*");

        txt_cif.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_cif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cifActionPerformed(evt);
            }
        });

        lb_direccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_direccion.setText("Direccion*");

        txt_direccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_direccionActionPerformed(evt);
            }
        });

        lb_ciudad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_ciudad.setText("Ciudad*");

        txt_ciudad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lb_cp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_cp.setText("CÃ³digo Postal");

        txt_cp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lb_provincia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_provincia.setText("Provincia*");

        txt_provincia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("En este menÃº puedes cambiar los datos de la empresa.");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Estos datos se usan para crear los tickets.");

        cmd_CargarConf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_CargarConf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/eye.png"))); // NOI18N
        cmd_CargarConf.setText("Cargar");
        cmd_CargarConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_CargarConfActionPerformed(evt);
            }
        });

        cmd_GuardarConf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_GuardarConf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/24px/OK.png"))); // NOI18N
        cmd_GuardarConf.setText("Guardar");
        cmd_GuardarConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_GuardarConfActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("Los datos marcados con * son obligatorios");

        javax.swing.GroupLayout PanelConfiguracionLayout = new javax.swing.GroupLayout(PanelConfiguracion);
        PanelConfiguracion.setLayout(PanelConfiguracionLayout);
        PanelConfiguracionLayout.setHorizontalGroup(
            PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                            .addComponent(cmd_CargarConf)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmd_GuardarConf))
                        .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                            .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lb_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_cif, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lb_direccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_ciudad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_cp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lb_provincia, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_cp, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_provincia, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_direccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_cif, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_nombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txt_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel9))
                    .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel11)))
                .addContainerGap(465, Short.MAX_VALUE))
        );
        PanelConfiguracionLayout.setVerticalGroup(
            PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(47, 47, 47)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_nombre)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_cif))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_direccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_ciudad)
                    .addComponent(txt_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_cp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_provincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_provincia))
                .addGap(14, 14, 14)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_CargarConf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_GuardarConf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(223, Short.MAX_VALUE))
        );

        PanelConfiguracion.setBounds(0, 0, 990, 630);
        Panel_Capas.add(PanelConfiguracion, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PanelAcercaDe.setBackground(new java.awt.Color(185, 221, 239));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("En este programa ha sido creado para la asignatura");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("\"InteracciÃ³n Persona Ordenador\" que se imparte en ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Alumnos del proyecto:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("el tercer curso del Grado de InformÃ¡tica.");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("AdriÃ¡n Luque Luque        all00023");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("JosÃ© MorÃ³n Rodriguez    jmr00026");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/ujaen.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setDefaultCapable(false);
        jButton2.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/ujaen.png"))); // NOI18N
        jButton2.setDisabledSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/100px/ujaen.png"))); // NOI18N
        jButton2.setEnabled(false);

        javax.swing.GroupLayout PanelAcercaDeLayout = new javax.swing.GroupLayout(PanelAcercaDe);
        PanelAcercaDe.setLayout(PanelAcercaDeLayout);
        PanelAcercaDeLayout.setHorizontalGroup(
            PanelAcercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAcercaDeLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(PanelAcercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        PanelAcercaDeLayout.setVerticalGroup(
            PanelAcercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAcercaDeLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(PanelAcercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAcercaDeLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel13)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16))
                    .addComponent(jButton2))
                .addContainerGap(290, Short.MAX_VALUE))
        );

        PanelAcercaDe.setBounds(0, 0, 990, 630);
        Panel_Capas.add(PanelAcercaDe, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PanelPrincipal.setBackground(new java.awt.Color(185, 221, 239));

        label1.setText("label1");

        jLabel2.setText("TPV Alibel ver 1.0");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 990, Short.MAX_VALUE)
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );

        PanelPrincipal.setBounds(0, 0, 990, 630);
        Panel_Capas.add(PanelPrincipal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Bar_Herramientas, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addComponent(Panel_Capas, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Bar_Herramientas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_Capas, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_venderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_venderActionPerformed
        deshabilitarcapas(PanelVender);
    }//GEN-LAST:event_cmd_venderActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
    }//GEN-LAST:event_formWindowStateChanged

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
    }//GEN-LAST:event_formPropertyChange

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        int width = Panel_Capas.getWidth();
        int height = Panel_Capas.getHeight();

        PanelVender.setSize(width, height);
        PanelStock.setSize(width, height);
        PanelTickets.setSize(width, height);

        // Tenemos que redimensionar todos los paneles aqui:
    }//GEN-LAST:event_formComponentResized

    private void cmd_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_0ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "0");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "0";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_0ActionPerformed

    private void cmd_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_6ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "6");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "6";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 6;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_6ActionPerformed

    private void cmd_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_eliminarActionPerformed

        //para eliminar un articulo usaremos el metodo de actualizar precios, que borrara la fila al estar puesta a 0
        int fila = Tabla_Vender.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) Tabla_Vender.getModel();

        if (fila >= 0 && fila < Tabla_Vender.getRowCount()) {

            modelo.setValueAt(0, fila, 2);

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_eliminarActionPerformed

    private void cmd_insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_insertarActionPerformed

        if (!txt_insertar.getText().equals("") && !txt_insertar.getText().equals("Inserte CÃ³digo de Barras")) {

            try {

                Producto p = new Producto(Integer.parseInt(txt_insertar.getText()));
                if (p.getCod_barras() > 0) {
                    Toolkit.getDefaultToolkit().beep();
                    insertarLineaVenta(p);
                }

                cmd_insertar.requestFocusInWindow();
                txt_insertar.requestFocusInWindow();

            } catch (SQLException ex) {
                Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
            }

        }
    }//GEN-LAST:event_cmd_insertarActionPerformed

    private void cmd_StockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_StockActionPerformed

        deshabilitarcapas(PanelStock);

    }//GEN-LAST:event_cmd_StockActionPerformed

    private void cmd_puntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_puntoActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //solo actuamos si estamos en la tabla y en una celda de la columna del precio unitario
        if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {


                if (col == 3) {

                    String aux = preciosUnitarios.get(fila);
                    //solo puede haber un separador de decimales
                    if (!aux.contains(".")) {
                        aux = aux + ".";
                        preciosUnitarios.set(fila, aux);
                    }

                }
            }

        }

    }//GEN-LAST:event_cmd_puntoActionPerformed

    private void cmd_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_1ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "1");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();

            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col) == null) {
                    } else if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "1";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 1;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_1ActionPerformed

    private void cmd_menosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_menosActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //solo actuamos si estamos en la tabla y en una celda de la columna unidades
        if (getFocusOwner().getClass() == JTable.class) {

            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (fila >= 0 && fila < modelo.getRowCount()) {

                Integer valor = (Integer) modelo.getValueAt(fila, 2);
                modelo.setValueAt(valor - 1, fila, 2);

            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_menosActionPerformed

    private void txt_insertarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_insertarFocusGained
        txt_insertar.setText("");
        txt_insertar.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_insertarFocusGained

    private void txt_insertarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_insertarKeyTyped
    }//GEN-LAST:event_txt_insertarKeyTyped

    private void cmd_masActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_masActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //solo actuamos si estamos en la tabla y en una celda de la columna unidades
        if (getFocusOwner().getClass() == JTable.class) {

            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (fila >= 0 && fila < modelo.getRowCount()) {

                Integer valor = (Integer) modelo.getValueAt(fila, 2);
                modelo.setValueAt(valor + 1, fila, 2);

            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_masActionPerformed

    private void txt_insertarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_insertarKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            cmd_insertar.doClick();

        }
    }//GEN-LAST:event_txt_insertarKeyPressed

    private void cmd_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_2ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "2");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "2";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 2;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_2ActionPerformed

    private void cmd_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_3ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "3");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();

            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "3";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 3;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_3ActionPerformed

    private void cmd_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_4ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "4");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "4";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 4;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_4ActionPerformed

    private void cmd_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_5ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "5");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "5";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 5;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_5ActionPerformed

    private void cmd_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_7ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "7");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "7";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 7;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_7ActionPerformed

    private void cmd_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_8ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "8");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "8";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 8;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_8ActionPerformed

    private void cmd_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_9ActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto insertamos el carÃ¡cter al final
        if (getFocusOwner().getClass() == JTextField.class) {

            ((JTextField) foco).setText(((JTextField) foco).getText() + "9");

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);
                        aux = aux + "9";

                        Float valor = Float.valueOf(aux);
                        modelo.setValueAt(valor, fila, col);
                        preciosUnitarios.set(fila, aux);

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor * 10 + 9;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_9ActionPerformed

    private void Tabla_VenderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tabla_VenderFocusLost

        //Actualizamos tambien la lista de precios en formato texto

        DefaultTableModel temp = (DefaultTableModel) Tabla_Vender.getModel();
        int n = temp.getRowCount();

        for (int i = 0; i < n; i++) {

            preciosUnitarios.set(i, eliminarCerosALaDerecha(String.valueOf(temp.getValueAt(i, 3))));

        }

        actualizarPrecios();
    }//GEN-LAST:event_Tabla_VenderFocusLost

    private void Tabla_VenderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla_VenderKeyTyped
    }//GEN-LAST:event_Tabla_VenderKeyTyped

    private void cmd_CEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_CEActionPerformed

        //Conseguimos el componente de la capa que tiene el foco
        Component foco = getFocusOwner();

        //Si es un campo de texto borramos el carÃ¡cter final
        if (getFocusOwner().getClass() == JTextField.class) {

            String text = ((JTextField) foco).getText();
            if (text.length() > 0) {
                ((JTextField) foco).setText(text.substring(0, text.length() - 1));
            }

            //Si es una tabla tenemos que distinguir entre numeros enteros y reales
        } else if (getFocusOwner().getClass() == JTable.class) {

            int col = ((JTable) foco).getSelectedColumn();
            int fila = ((JTable) foco).getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) ((JTable) foco).getModel();

            if (col >= 0 && col < modelo.getColumnCount() && fila >= 0 && fila < modelo.getRowCount()) {

                //Solo actualizamos si la celda es editable
                if (((JTable) foco).isCellEditable(fila, col)) {


                    if (modelo.getValueAt(fila, col).getClass() == Float.class) {

                        String aux = preciosUnitarios.get(fila);

                        if (aux.length() == 1) {
                            Float valor = (float) 0.0;
                            modelo.setValueAt(valor, fila, col);
                            preciosUnitarios.set(fila, "0");
                        } else {
                            aux = aux.substring(0, aux.length() - 1);

                            Float valor = Float.valueOf(aux);
                            modelo.setValueAt(valor, fila, col);
                            preciosUnitarios.set(fila, aux);
                        }

                    } else if (modelo.getValueAt(fila, col).getClass() == Integer.class) {

                        Integer valor = (Integer) modelo.getValueAt(fila, col);
                        valor = valor / 10;

                        modelo.setValueAt(valor, fila, col);

                    }
                }
            }

        }

        actualizarPrecios();

    }//GEN-LAST:event_cmd_CEActionPerformed

    private void cmd_finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_finalizarActionPerformed

        if (Tabla_Vender.getRowCount() > 0) {//Si esta vacio el ticket damos error.

            ArrayList<Ticket_Producto> lista = new ArrayList<>();
            DefaultTableModel modelo = (DefaultTableModel) Tabla_Vender.getModel();

            for (int i = 0; i < modelo.getRowCount(); i++) {

                lista.add(new Ticket_Producto(0, ((Integer) modelo.getValueAt(i, 0)), ((Integer) modelo.getValueAt(i, 2)), ((Float) modelo.getValueAt(i, 3))));

            }
            try {
                Ticket compra = new Ticket(lista);
                compra.insertar();
                compra.imprimir_ticket();

                int n = modelo.getRowCount();

                for (int i = 0; i < n; i++) {

                    modelo.removeRow(0);

                }

                preciosUnitarios = new ArrayList<>();

                actualizarPrecios();

                Panel.aviso("Ticket Creado con Exito", compra.toString());

            } catch (SQLException ex) {
                Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
            } catch (IOException ex) {
                Panel.error("Error Fichero", "Compruebe que la carpeta tickets es accesible");
            }
        }

    }//GEN-LAST:event_cmd_finalizarActionPerformed

    private void cmd_eliminarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_eliminarTodoActionPerformed

        //Solo se borra cuando hay algun articulo y si lo confirma el usuario
        if (Tabla_Vender.getRowCount() > 0) {

            int respuesta = Panel.confirmacion_si_no("Confirmacion", "Â¿Desea eliminar la compra actual?");

            if (respuesta == 0) {

                DefaultTableModel modelo = (DefaultTableModel) Tabla_Vender.getModel();
                int n = modelo.getRowCount();

                for (int i = 0; i < n; i++) {

                    modelo.removeRow(0);

                }

                preciosUnitarios = new ArrayList<>();

                actualizarPrecios();
            }
        }
    }//GEN-LAST:event_cmd_eliminarTodoActionPerformed

    private void cmd_TicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_TicketsActionPerformed

        deshabilitarcapas(PanelTickets);

    }//GEN-LAST:event_cmd_TicketsActionPerformed

    private void cmd_TodoTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_TodoTicketsActionPerformed

        DefaultTableModel temp = (DefaultTableModel) Tabla_Tickets.getModel();
        Object[] fila = new Object[3];
        int filas = Tabla_Tickets.getRowCount();
        ArrayList<ArrayList<String>> lista = new ArrayList<>();

        for (int i = 0; i < filas; i++) {

            temp.removeRow(0);

        }

        try {
            lista = Ticket.consultarIds();
        } catch (SQLException ex) {
            Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
        }

        for (int i = 0; i < lista.size(); i++) {
            fila[0] = lista.get(i).get(0);
            fila[1] = lista.get(i).get(1);
            fila[2] = lista.get(i).get(2);

            temp.addRow(fila);
        }

    }//GEN-LAST:event_cmd_TodoTicketsActionPerformed

    private void cmd_AplicarFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_AplicarFechasActionPerformed

        DefaultTableModel temp = (DefaultTableModel) Tabla_Tickets.getModel();
        Object[] fila = new Object[3];
        int filas = Tabla_Tickets.getRowCount();
        ArrayList<ArrayList<String>> lista = new ArrayList<>();

        for (int i = 0; i < filas; i++) {

            temp.removeRow(0);

        }

        if (fechaDesde.getDate() != null && fechaHasta.getDate() != null) {

            Date fecha1 = fechaDesde.getDate();
            Date fecha2 = fechaHasta.getDate();
            String fec1, fec2;

            String dia = String.valueOf(fecha1.getDate()),
                    mes = String.valueOf(fecha1.getMonth() + 1),
                    aÃ±o = String.valueOf(fecha1.getYear() + 1900);

            if (dia.length() < 2) {
                dia = '0' + dia;
            }
            if (mes.length() < 2) {
                mes = '0' + mes;
            }

            fec1 = dia + "/" + mes + "/" + aÃ±o;

            dia = String.valueOf(fecha2.getDate());
            mes = String.valueOf(fecha2.getMonth() + 1);
            aÃ±o = String.valueOf(fecha2.getYear() + 1900);

            if (dia.length() < 2) {
                dia = '0' + dia;
            }
            if (mes.length() < 2) {
                mes = '0' + mes;
            }

            fec2 = dia + "/" + mes + "/" + aÃ±o;

            try {
                lista = Ticket.consultarIdsPorFecha(fec1, fec2);
            } catch (SQLException ex) {
                Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
            }

            for (int i = 0; i < lista.size(); i++) {
                fila[0] = lista.get(i).get(0);
                fila[1] = lista.get(i).get(1);
                fila[2] = lista.get(i).get(2);

                temp.addRow(fila);
            }

        }
    }//GEN-LAST:event_cmd_AplicarFechasActionPerformed

    private void cmd_abrirTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_abrirTicketActionPerformed

        if (ticketActual != null) {

            ticketActual.abrirTicket();

        } else {
            Panel.error("Aviso", "No ha seleccionado ningÃºn ticket");
        }

    }//GEN-LAST:event_cmd_abrirTicketActionPerformed

    private void cmd_imprimirTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_imprimirTicketActionPerformed

        if (ticketActual != null) {

            Panel.aviso("Ticket Creado con Exito", ticketActual.toString());

        } else {
            Panel.error("Aviso", "No ha seleccionado ningÃºn ticket");
        }

    }//GEN-LAST:event_cmd_imprimirTicketActionPerformed

    private void Tabla_TicketsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_TicketsMouseClicked

        int fila = Tabla_Tickets.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) Tabla_Tickets.getModel();

        if (fila > 0 && fila < Tabla_Tickets.getRowCount()) {

            int id = Integer.valueOf((String) modelo.getValueAt(fila, 0));

            //Si es distinto del almacenado
            if (ticketActual == null || ticketActual.getId() != id) {

                try {
                    ticketActual = new Ticket(id);
                    areaTickets.setText(ticketActual.toString());
                } catch (SQLException ex) {
                    Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
                }


            }

        }

    }//GEN-LAST:event_Tabla_TicketsMouseClicked

    private void Tabla_TicketsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla_TicketsKeyReleased

        //si pulsamos alguna flecha
        Tabla_TicketsMouseClicked(null);

    }//GEN-LAST:event_Tabla_TicketsKeyReleased

    private void cmd_AplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_AplicarActionPerformed

        int filas = Tabla_Stock.getRowCount();
        if (filas > 0) {

            ArrayList<Integer> mod = new ArrayList<>();
            Producto p, paux = new Producto();

            for (int i = 0; i < filas; i++) {
                paux.setCod_barras((int) Tabla_Stock.getValueAt(i, 0));
                p = listaStock.get(listaStock.indexOf(paux));

                if (p.getStock_minimo() != (int) Tabla_Stock.getValueAt(i, 2) || p.getStock() != (int) Tabla_Stock.getValueAt(i, 3)) {

                    p.setStock_minimo((int) Tabla_Stock.getValueAt(i, 2));
                    p.setStock((int) Tabla_Stock.getValueAt(i, 3));
                    p.modificar_cambios();

                }

            }

        }
    }//GEN-LAST:event_cmd_AplicarActionPerformed

    private void cmd_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_BuscarActionPerformed

        if (!txt_Busqueda.getText().equals("") || txt_Busqueda.getText().equals("BÃºsqueda")) {

            DefaultTableModel temp = (DefaultTableModel) Tabla_Stock.getModel();
            Object[] fila = new Object[4];
            int filas = Tabla_Stock.getRowCount();

            for (int i = 0; i < filas; i++) {

                temp.removeRow(0);

            }

            listaStock.clear();

            try {
                listaStock = Producto.busquedaStock(txt_Busqueda.getText());
            } catch (SQLException ex) {
                Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
            }

            for (int i = 0; i < listaStock.size(); i++) {
                fila[0] = listaStock.get(i).getCod_barras();
                fila[1] = listaStock.get(i).getNombre();
                fila[2] = listaStock.get(i).getStock_minimo();
                fila[3] = listaStock.get(i).getStock();

                temp.addRow(fila);
            }

            // TODO add your handling code here:
        }
    }//GEN-LAST:event_cmd_BuscarActionPerformed

    private void txt_BusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BusquedaKeyTyped
    }//GEN-LAST:event_txt_BusquedaKeyTyped

    private void txt_BusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BusquedaKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            cmd_Buscar.doClick();

        }
    }//GEN-LAST:event_txt_BusquedaKeyPressed

    private void txt_BusquedaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_BusquedaFocusGained

        if ("BÃºsqueda".equals(txt_Busqueda.getText())) {
            txt_Busqueda.setText("");
            txt_Busqueda.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_BusquedaFocusGained

    private void txt_BusquedaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_BusquedaFocusLost
    }//GEN-LAST:event_txt_BusquedaFocusLost

    private void txt_BusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_BusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_BusquedaActionPerformed

    private void cmd_BajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_BajoActionPerformed

        DefaultTableModel temp = (DefaultTableModel) Tabla_Stock.getModel();
        Object[] fila = new Object[4];
        int filas = Tabla_Stock.getRowCount();

        for (int i = 0; i < filas; i++) {

            temp.removeRow(0);

        }

        listaStock.clear();

        try {
            listaStock = Producto.consultarStock();
        } catch (SQLException ex) {
            Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
        }

        for (int i = 0; i < listaStock.size(); i++) {
            fila[0] = listaStock.get(i).getCod_barras();
            fila[1] = listaStock.get(i).getNombre();
            fila[2] = listaStock.get(i).getStock_minimo();
            fila[3] = listaStock.get(i).getStock();

            temp.addRow(fila);
        }
    }//GEN-LAST:event_cmd_BajoActionPerformed

    private void cmd_TodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_TodoActionPerformed

        DefaultTableModel temp = (DefaultTableModel) Tabla_Stock.getModel();
        Object[] fila = new Object[4];
        int filas = Tabla_Stock.getRowCount();

        for (int i = 0; i < filas; i++) {

            temp.removeRow(0);

        }

        listaStock.clear();

        try {
            listaStock = Producto.consultarTodoStock();
        } catch (SQLException ex) {
            Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
        }

        for (int i = 0; i < listaStock.size(); i++) {
            fila[0] = listaStock.get(i).getCod_barras();
            fila[1] = listaStock.get(i).getNombre();
            fila[2] = listaStock.get(i).getStock_minimo();
            fila[3] = listaStock.get(i).getStock();

            temp.addRow(fila);
        }
    }//GEN-LAST:event_cmd_TodoActionPerformed

    private void Tabla_StockFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tabla_StockFocusLost
        Tabla_Stock.editCellAt(-1, -1);
    }//GEN-LAST:event_Tabla_StockFocusLost

    private void cmd_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_aboutActionPerformed

        deshabilitarcapas(PanelAcercaDe);

    }//GEN-LAST:event_cmd_aboutActionPerformed

    private void cmd_configureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_configureActionPerformed

        deshabilitarcapas(PanelConfiguracion);

    }//GEN-LAST:event_cmd_configureActionPerformed

    private void txt_direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_direccionActionPerformed

    private void txt_cifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cifActionPerformed

    private void cmd_CargarConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_CargarConfActionPerformed

        ArrayList<String> lista = Ticket.getConfiguracion();

        if (lista != null && lista.size() == 6) {

            txt_nombre.setText(lista.get(0));
            txt_cif.setText(lista.get(1));
            txt_direccion.setText(lista.get(2));
            txt_ciudad.setText(lista.get(3));
            txt_cp.setText(lista.get(4));
            txt_provincia.setText(lista.get(5));

        }

    }//GEN-LAST:event_cmd_CargarConfActionPerformed

    private void cmd_GuardarConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_GuardarConfActionPerformed

        if (txt_nombre.getText() != null && !"".equals(txt_nombre.getText())) {
            if (txt_cif.getText() != null && !"".equals(txt_cif.getText())) {
                if (txt_direccion.getText() != null && !"".equals(txt_direccion.getText())) {
                    if (txt_ciudad.getText() != null && !"".equals(txt_ciudad.getText())) {
                        if (txt_provincia.getText() != null && !"".equals(txt_provincia.getText())) {

                            ArrayList<String> lista = new ArrayList<>();

                            lista.add(txt_nombre.getText());
                            lista.add(txt_cif.getText());
                            lista.add(txt_direccion.getText());
                            lista.add(txt_ciudad.getText());
                            lista.add(txt_cp.getText());
                            lista.add(txt_provincia.getText());

                            Ticket.setConfiguracion(lista);

                        } else {
                            Panel.error("Error", "Falta el campo \"Provincia\"");
                        }
                    } else {
                        Panel.error("Error", "Falta el campo \"Ciudad\"");
                    }
                } else {
                    Panel.error("Error", "Falta el campo \"DirecciÃ³n\"");
                }
            } else {
                Panel.error("Error", "Falta el campo \"CIF\"");
            }
        } else {
            Panel.error("Error", "Falta el campo \"Nombre de la CompaÃ±ia\"");
        }

    }//GEN-LAST:event_cmd_GuardarConfActionPerformed

    private void cmd_ArticulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_ArticulosActionPerformed

        deshabilitarcapas(PanelArticulos);

    }//GEN-LAST:event_cmd_ArticulosActionPerformed

    private void cmd_insertarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_insertarArticuloActionPerformed

        if (!txt_insertarArticulo.getText().equals("") && !txt_insertarArticulo.getText().equals("Inserte CÃ³digo de Barras")) {

            try {

                Producto p = new Producto(Integer.parseInt(txt_insertarArticulo.getText()));

                if (p.getCod_barras() > 0) {

                    txt_codBarrasArticulo.setText(String.valueOf(p.getCod_barras()));
                    txt_nombreArticulo.setText(p.getNombre());
                    txt_precioArticulo.setText(String.valueOf(p.getPrecio()));
                    txt_formatoArticulo.setText(p.getFormato());
                    txt_stockArticulo.setText(String.valueOf(p.getStock()));
                    txt_stockMinimoArticulo.setText(String.valueOf(p.getStock_minimo()));
                    txt_imagen.setText(p.getRutaImagen());


                    imagenArticulo = p.getImagen();

                }

            } catch (SQLException ex) {
                Panel.error("Error SQL", "Compruebe que ningun programa este usando la base de datos");
            }

        }
    }//GEN-LAST:event_cmd_insertarArticuloActionPerformed

    private void txt_insertarArticuloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_insertarArticuloFocusGained

        txt_insertarArticulo.setText("");
        txt_insertarArticulo.setForeground(Color.BLACK);

    }//GEN-LAST:event_txt_insertarArticuloFocusGained

    private void txt_insertarArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_insertarArticuloKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_insertarArticuloKeyTyped

    private void txt_insertarArticuloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_insertarArticuloKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            cmd_insertarArticulo.doClick();

        }

    }//GEN-LAST:event_txt_insertarArticuloKeyPressed

    private void canvasAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasAgregarMouseClicked

        if (imagenArticulo != null) {

            canvasAgregar.getGraphics().drawImage(imagenArticulo, xArticulo, yArticulo, null);

        }

    }//GEN-LAST:event_canvasAgregarMouseClicked

    private void txt_precioArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioArticuloActionPerformed

    private void txt_nombreArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreArticuloActionPerformed

    private void txt_stockMinimoArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_stockMinimoArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_stockMinimoArticuloActionPerformed

    private void cmd_insertar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_insertar2ActionPerformed

        if (txt_codBarrasArticulo.getText() != null && !"".equals(txt_codBarrasArticulo.getText())) {
            if (txt_nombreArticulo.getText() != null && !"".equals(txt_nombreArticulo.getText())) {
                if (txt_precioArticulo.getText() != null && !"".equals(txt_precioArticulo.getText())) {
                    if (txt_formatoArticulo.getText() != null && !"".equals(txt_formatoArticulo.getText())) {
                        if (txt_stockArticulo.getText() != null && !"".equals(txt_stockArticulo.getText())) {
                            if (txt_stockMinimoArticulo.getText() != null && !"".equals(txt_stockMinimoArticulo.getText())) {
                                if (imagenArticulo != null) {

                                    try {
                                        int i=0;
                                        if (Producto.comprobarExistencia(Integer.valueOf(txt_codBarrasArticulo.getText()))) {

                                            Producto ant = new Producto(Integer.valueOf(txt_codBarrasArticulo.getText()));
                                            
                                            System.err.println(i++);
                                            
                                            ant.setNombre(txt_nombreArticulo.getText());
                                            System.err.println(i++);
                                            ant.setPrecio(Float.valueOf(txt_precioArticulo.getText()));
                                            System.err.println(i++);
                                            ant.setFormato(txt_formatoArticulo.getText());
                                            System.err.println(i++);
                                            ant.setStock(Integer.valueOf(txt_stockArticulo.getText()));
                                            System.err.println(i++);
                                            ant.setStock_minimo(Integer.valueOf(txt_stockMinimoArticulo.getText()));
                                            System.err.println(i++);
                                            
                                            ant.modificar_cambios();
                                            System.err.println(i++);
                                            
                                            Producto.guardarImagen(imagenArticulo, ant.getCod_barras());
                                            System.err.println(i++);

                                        } else {
                                            
                                            Producto nuevo= new Producto(Integer.valueOf(txt_codBarrasArticulo.getText()),
                                                    txt_nombreArticulo.getText(), Float.valueOf(txt_precioArticulo.getText()), 
                                                    Integer.valueOf(txt_stockArticulo.getText()), 
                                                    Integer.valueOf(txt_stockMinimoArticulo.getText()), txt_formatoArticulo.getText(),0);
                                            
                                            nuevo.insertar();
                                            Producto.guardarImagen(imagenArticulo, nuevo.getCod_barras());
                                            
                                        }


                                    } catch ( NumberFormatException | IOException | SQLException e) {
                                        Panel.error("Error", "Compruebe que los campos esten correctamente rellenados"+e.getMessage());
                                    }


                                } else {
                                    Panel.error("Error", "Falta la imagen");
                                }
                            } else {
                                Panel.error("Error", "Falta el campo \"Stock MÃ­nimo\"");
                            }
                        } else {
                            Panel.error("Error", "Falta el campo \"Stock\"");
                        }
                    } else {
                        Panel.error("Error", "Falta el campo \"Formato\"");
                    }
                } else {
                    Panel.error("Error", "Falta el campo \"Precio\"");
                }
            } else {
                Panel.error("Error", "Falta el campo \"Nombre\"");
            }
        } else {
            Panel.error("Error", "Falta el campo \"CÃ³digo de Barras\"");
        }


    }//GEN-LAST:event_cmd_insertar2ActionPerformed

    private void canvasAgregarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_canvasAgregarFocusGained

        if (imagenArticulo != null) {

            canvasAgregar.getGraphics().drawImage(imagenArticulo, xArticulo, yArticulo, null);

        }

    }//GEN-LAST:event_canvasAgregarFocusGained

    private void cmd_explorarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_explorarActionPerformed

        JFileChooser fileC = new JFileChooser();
        Image imagen;

        fileC.removeChoosableFileFilter(fileC.getChoosableFileFilters()[0]);

        String[] ext = {"jpg", "png", "bmp", "gif"};
        FileFilter elector = new FileNameExtensionFilter("Imagenes", ext);
        fileC.addChoosableFileFilter(elector);

        int valor = fileC.showOpenDialog(this);

        if (valor == JFileChooser.APPROVE_OPTION) {

            File file = fileC.getSelectedFile();

            try {

                txt_imagen.setText(file.getCanonicalPath());
                imagen = new ImageIcon(file.getCanonicalPath()).getImage();

                imagenArticulo = imagen;

            } catch (IOException ex) {
                Panel.error("Error Fichero", "Compruebe que el archivo seleccionado es accesible");
            }

        }


    }//GEN-LAST:event_cmd_explorarActionPerformed

    private void insertarLineaVenta(Producto p) {

        DefaultTableModel temp = (DefaultTableModel) Tabla_Vender.getModel();



        Object[] fila = new Object[5];
        boolean existe = false;
        int n = temp.getRowCount();

        int i = 0;
        while (!existe && i < n) {

            if ((Integer) temp.getValueAt(i, 0) == p.getCod_barras()) {
                existe = true;
            } else {
                i++;
            }
        }


        if (!existe) {

            fila[0] = p.getCod_barras();
            fila[1] = p.getNombre();
            fila[2] = 1;
            fila[3] = p.getPrecio();
            fila[4] = p.getPrecio();

            preciosUnitarios.add(eliminarCerosALaDerecha(String.valueOf(p.getPrecio())));

            temp.addRow(fila);


        } else {

            int aux;
            aux = (Integer) temp.getValueAt(i, 2);
            temp.setValueAt(aux + 1, i, 2);

        }

        calcularPrecio();

    }

    private void deshabilitarcapas(JPanel vis) {

        PanelVender.setVisible(false);
        PanelStock.setVisible(false);
        PanelTickets.setVisible(false);
        PanelConfiguracion.setVisible(false);
        PanelAcercaDe.setVisible(false);
        PanelArticulos.setVisible(false);
        PanelVender.setEnabled(false);
        PanelStock.setEnabled(false);
        PanelTickets.setEnabled(false);
        PanelConfiguracion.setEnabled(false);
        PanelAcercaDe.setEnabled(false);
        PanelArticulos.setEnabled(false);

        int width = Panel_Capas.getWidth();
        int height = Panel_Capas.getHeight();
        vis.setSize(width, height);
        vis.setLocation(0, 0);

        vis.setVisible(true);
        vis.setEnabled(true);
        Panel_Capas.moveToFront(vis);
    }

    private void actualizarPrecios() {

        DefaultTableModel temp = (DefaultTableModel) Tabla_Vender.getModel();
        int n = temp.getRowCount();
        Integer cant;
        Float precio;
        ArrayList<Integer> filasVacias = new ArrayList<>();

        for (int i = 0; i < n; i++) {

            cant = (Integer) temp.getValueAt(i, 2);

            //Guardamos las lineas vacias para borrarlas despues y no alterar el orden
            if (cant != null) {//Una celda vacia devuelve null

                if (cant == 0) {
                    filasVacias.add(i);
                } else {

                    if (temp.getValueAt(i, 3) != null) {

                        //Si la celda no tiene decimales se detecta como entero y tenemos que controlarlo
                        if (temp.getValueAt(i, 3).getClass() == Integer.class) {
                            precio = Float.valueOf(String.valueOf((Integer) temp.getValueAt(i, 3)));
                        } else {
                            precio = (Float) temp.getValueAt(i, 3);
                        }
                    } else {//Una celda vacia devuelve null

                        precio = (float) 0;
                        temp.setValueAt(0, i, 3);

                    }

                    temp.setValueAt(cant * precio, i, 4);

                }
            } else {
                filasVacias.add(i);
            }
        }

        //Si borramos mas de un elemento alteramos el indice d elos siguientes por lo que por seguridad lo hacremos en orden inverso
        for (int i = filasVacias.size() - 1; i >= 0; i--) {

            temp.removeRow(filasVacias.get(i));
            preciosUnitarios.remove(filasVacias.get(i));

        }

        //Llamamos a la funciÃ³n que actualiza el precio total
        calcularPrecio();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PPal().setVisible(true);
                } catch (AWTException ex) {
                    Logger.getLogger(PPal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private Float calcularPrecio() {

        float total = 0;
        DefaultTableModel temp = (DefaultTableModel) Tabla_Vender.getModel();
        int n = temp.getRowCount();

        for (int i = 0; i < n; i++) {

            total += (float) temp.getValueAt(i, 4);

        }

        String aux = String.valueOf(total);

        int indice = aux.indexOf(".");

        if (indice > 0 && indice < aux.length() - 3) {
            aux = aux.substring(0, indice + 3);
        }

        lb_total.setText("" + aux + " â¬");

        return total;
    }

    private String eliminarCerosALaDerecha(String ant) {

        if (ant.contains(".")) {

            while (ant.charAt(ant.length() - 1) == '0') {
                //eliminamos los ceros finales
                ant = ant.substring(0, ant.length() - 1);

            }

            if (ant.charAt(ant.length() - 1) == '.') {
                //si hay no hay decimales eliminamos tambien la coma
                ant = ant.substring(0, ant.length() - 1);
            }

        }

        return ant;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar Bar_Herramientas;
    private javax.swing.JPanel PanelAcercaDe;
    private javax.swing.JPanel PanelArticulos;
    private javax.swing.JPanel PanelArticulosAÃ±adirEditar;
    private javax.swing.JPanel PanelArticulosEliminar;
    private javax.swing.JPanel PanelConfiguracion;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JPanel PanelStock;
    private javax.swing.JPanel PanelTickets;
    private javax.swing.JPanel PanelVender;
    private javax.swing.JLayeredPane Panel_Capas;
    private javax.swing.JTable Tabla_Stock;
    private javax.swing.JTable Tabla_Tickets;
    private javax.swing.JTable Tabla_Vender;
    private javax.swing.JTextArea areaTickets;
    private java.awt.Canvas canvasAgregar;
    private javax.swing.JButton cmd_0;
    private javax.swing.JButton cmd_1;
    private javax.swing.JButton cmd_2;
    private javax.swing.JButton cmd_3;
    private javax.swing.JButton cmd_4;
    private javax.swing.JButton cmd_5;
    private javax.swing.JButton cmd_6;
    private javax.swing.JButton cmd_7;
    private javax.swing.JButton cmd_8;
    private javax.swing.JButton cmd_9;
    private javax.swing.JButton cmd_Aplicar;
    private javax.swing.JButton cmd_AplicarFechas;
    private javax.swing.JButton cmd_Articulos;
    private javax.swing.JButton cmd_Bajo;
    private javax.swing.JButton cmd_Buscar;
    private javax.swing.JButton cmd_CE;
    private javax.swing.JButton cmd_CargarConf;
    private javax.swing.JButton cmd_GuardarConf;
    private javax.swing.JButton cmd_Stock;
    private javax.swing.JButton cmd_Tickets;
    private javax.swing.JButton cmd_Todo;
    private javax.swing.JButton cmd_TodoTickets;
    private javax.swing.JButton cmd_about;
    private javax.swing.JButton cmd_abrirTicket;
    private javax.swing.JButton cmd_configure;
    private javax.swing.JButton cmd_eliminar;
    private javax.swing.JButton cmd_eliminarTodo;
    private javax.swing.JButton cmd_explorar;
    private javax.swing.JButton cmd_finalizar;
    private javax.swing.JButton cmd_imprimirTicket;
    private javax.swing.JButton cmd_insertar;
    private javax.swing.JButton cmd_insertar2;
    private javax.swing.JButton cmd_insertarArticulo;
    private javax.swing.JButton cmd_mas;
    private javax.swing.JButton cmd_menos;
    private javax.swing.JButton cmd_punto;
    private javax.swing.JButton cmd_vender;
    private com.toedter.calendar.JDateChooser fechaDesde;
    private com.toedter.calendar.JDateChooser fechaHasta;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.Label label1;
    private javax.swing.JLabel lb_cif;
    private javax.swing.JLabel lb_ciudad;
    private javax.swing.JLabel lb_codBarrasArticulo;
    private javax.swing.JLabel lb_cp;
    private javax.swing.JLabel lb_direccion;
    private javax.swing.JLabel lb_formatoArticulo;
    private javax.swing.JLabel lb_imagen;
    private javax.swing.JLabel lb_nombre;
    private javax.swing.JLabel lb_nombreArticulo;
    private javax.swing.JLabel lb_precioArticulo;
    private javax.swing.JLabel lb_provincia;
    private javax.swing.JLabel lb_stockArticulo;
    private javax.swing.JLabel lb_stockMinimoArticulo;
    private javax.swing.JLabel lb_total;
    private javax.swing.JTextField txt_Busqueda;
    private javax.swing.JLabel txt_Desde;
    private javax.swing.JLabel txt_Hasta;
    private javax.swing.JLabel txt_agregarEditar;
    private javax.swing.JTextField txt_cif;
    private javax.swing.JTextField txt_ciudad;
    private javax.swing.JTextField txt_codBarrasArticulo;
    private javax.swing.JTextField txt_cp;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_formatoArticulo;
    private javax.swing.JTextField txt_imagen;
    private javax.swing.JTextField txt_insertar;
    private javax.swing.JTextField txt_insertarArticulo;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_nombreArticulo;
    private javax.swing.JTextField txt_precioArticulo;
    private javax.swing.JTextField txt_provincia;
    private javax.swing.JTextField txt_stockArticulo;
    private javax.swing.JTextField txt_stockMinimoArticulo;
    // End of variables declaration//GEN-END:variables
}
